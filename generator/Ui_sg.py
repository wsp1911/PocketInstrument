# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'e:\Project\Python\PocketInstrument\ui\test.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

# import generalFunc as gf


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        width, height = 1200, 800
        itemh = 40
        label_w, label_h = 120, itemh
        input_w, input_h = 160, itemh
        button_w, button_h = 150, itemh
        disp_h = 100
        width1, height1 = 500, 500
        startx, starty = (width - 2 * width1) // 4, (height - height1) // 2 + disp_h
        startx_2 = width // 2 + startx
        row_num = 6
        dy, dx = (height1 - row_num * label_h) // (row_num - 1), (
            width1 - label_w - input_w
        ) // 2
        x = [startx, startx + label_w + dx, startx + label_w + input_w + 2 * dx]
        y = [starty + i * (dy + label_h) for i in range(row_num)]
        x_2 = [startx_2, startx_2 + label_w + dx, startx_2 + label_w + input_w + 2 * dx]

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(width, height)
        MainWindow.setFont(QtGui.QFont("宋体", 14))
        MainWindow.setWindowTitle("信号发生器")

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # self.RunButton = QtWidgets.QPushButton(self.centralwidget)
        # self.RunButton.setGeometry(
        #     QtCore.QRect(width - button_w, 0, button_w, button_h)
        # )
        # self.RunButton.setObjectName("RunButton")
        # self.RunButton.setText("Run")
        # self.RunButton.setStyleSheet("background-color: green;")

        i = 0
        self.channelLabel = QtWidgets.QLabel(self.centralwidget)
        self.channelLabel.setGeometry(QtCore.QRect(x[0], y[i], label_w, label_h))
        self.channelLabel.setObjectName("channelLabel")
        self.channelLabel.setText("通道1")
        self.waveSelect = QtWidgets.QComboBox(self.centralwidget)
        self.waveSelect.setGeometry(QtCore.QRect(x[1], y[i], input_w, input_h))
        self.waveSelect.setObjectName("waveSelect")
        self.waveSelect.addItems(("关闭", "正弦波", "方波", "直流", "三角波", "锯齿波"))
        self.waveSelect.setCurrentIndex(0)
        i += 1

        self.freqLabel = QtWidgets.QLabel(self.centralwidget)
        self.freqLabel.setGeometry(QtCore.QRect(x[0], y[i], label_w, label_h))
        self.freqLabel.setObjectName("freqLabel")
        self.freqLabel.setText("频率/Hz")
        self.freqInput = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.freqInput.setGeometry(QtCore.QRect(x[1], y[i], input_w, input_h))
        self.freqInput.setMaximum(20000.0)
        self.freqInput.setObjectName("freqInput")
        self.freqInput.setValue(100)
        i += 1

        self.ampLabel = QtWidgets.QLabel(self.centralwidget)
        self.ampLabel.setGeometry(QtCore.QRect(x[0], y[i], label_w, label_h))
        self.ampLabel.setObjectName("ampLabel")
        self.ampLabel.setText("幅度/V")
        self.ampInput = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.ampInput.setGeometry(QtCore.QRect(x[1], y[i], input_w, input_h))
        self.ampInput.setSingleStep(0.1)
        self.ampInput.setObjectName("ampInput")
        self.ampInput.setValue(1)
        i += 1

        self.offsetLabel = QtWidgets.QLabel(self.centralwidget)
        self.offsetLabel.setGeometry(QtCore.QRect(x[0], y[i], label_w, label_h))
        self.offsetLabel.setObjectName("offsetLabel")
        self.offsetLabel.setText("偏置/V")
        # self.offsetLabel.adjustSize()

        self.offsetInput = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.offsetInput.setGeometry(QtCore.QRect(x[1], y[i], input_w, input_h))
        self.offsetInput.setSingleStep(0.1)
        self.offsetInput.setObjectName("offsetInput")
        self.offsetInput.setValue(0)
        self.offsetInput.setRange(-10, 10)
        i += 1

        self.dutyLabel = QtWidgets.QLabel(self.centralwidget)
        self.dutyLabel.setGeometry(QtCore.QRect(x[0], y[i], label_w, label_h))
        self.dutyLabel.setObjectName("dutyLabel")
        self.dutyLabel.setText("占空比/%")
        self.dutyInput = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.dutyInput.setGeometry(QtCore.QRect(x[1], y[i], input_w, input_h))
        self.dutyInput.setMaximum(100.0)
        self.dutyInput.setSingleStep(10.0)
        self.dutyInput.setObjectName("dutyInput")
        self.dutyInput.setValue(50)
        i += 1

        self.phiLabel = QtWidgets.QLabel(self.centralwidget)
        self.phiLabel.setGeometry(QtCore.QRect(x[0], y[i], label_w, label_h))
        self.phiLabel.setObjectName("phiLabel")
        self.phiLabel.setText("相位/°")
        self.phiInput = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.phiInput.setGeometry(QtCore.QRect(x[1], y[i], input_w, input_h))
        self.phiInput.setMaximum(360.0)
        self.phiInput.setSingleStep(10)
        self.phiInput.setObjectName("phiInput")
        self.phiInput.setValue(0)
        i += 1

        """
        second column
        """
        i = 0
        self.channelLabel_2 = QtWidgets.QLabel(self.centralwidget)
        self.channelLabel_2.setGeometry(QtCore.QRect(x_2[0], y[i], label_w, label_h))
        self.channelLabel_2.setObjectName("channelLabel_2")
        self.channelLabel_2.setText("通道2")
        self.waveSelect_2 = QtWidgets.QComboBox(self.centralwidget)
        self.waveSelect_2.setGeometry(QtCore.QRect(x_2[1], y[i], input_w, input_h))
        self.waveSelect_2.setObjectName("waveSelect_2")
        self.waveSelect_2.addItems(("关闭", "正弦波", "方波", "直流", "三角波", "锯齿波"))
        self.waveSelect_2.setCurrentIndex(0)
        i += 1

        self.freqLabel_2 = QtWidgets.QLabel(self.centralwidget)
        self.freqLabel_2.setGeometry(QtCore.QRect(x_2[0], y[i], label_w, label_h))
        self.freqLabel_2.setObjectName("freqLabel_2")
        self.freqLabel_2.setText("频率/Hz")
        self.freqInput_2 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.freqInput_2.setGeometry(QtCore.QRect(x_2[1], y[i], input_w, input_h))
        self.freqInput_2.setMaximum(20000.0)
        self.freqInput_2.setObjectName("freqInput_2")
        self.freqInput_2.setValue(100)
        i += 1

        self.ampLabel_2 = QtWidgets.QLabel(self.centralwidget)
        self.ampLabel_2.setGeometry(QtCore.QRect(x_2[0], y[i], label_w, label_h))
        self.ampLabel_2.setObjectName("ampLabel_2")
        self.ampLabel_2.setText("幅度/V")
        self.ampInput_2 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.ampInput_2.setGeometry(QtCore.QRect(x_2[1], y[i], input_w, input_h))
        self.ampInput_2.setSingleStep(0.1)
        self.ampInput_2.setObjectName("ampInput_2")
        self.ampInput_2.setValue(1)
        i += 1

        self.offsetLabel_2 = QtWidgets.QLabel(self.centralwidget)
        self.offsetLabel_2.setGeometry(QtCore.QRect(x_2[0], y[i], label_w, label_h))
        self.offsetLabel_2.setObjectName("offsetLabel_2")
        self.offsetLabel_2.setText("偏置/V")
        self.offsetInput_2 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.offsetInput_2.setGeometry(QtCore.QRect(x_2[1], y[i], input_w, input_h))
        self.offsetInput_2.setSingleStep(0.1)
        self.offsetInput_2.setObjectName("offsetInput_2")
        self.offsetInput_2.setValue(0)
        self.offsetInput_2.setRange(-10, 10)
        i += 1

        self.dutyLabel_2 = QtWidgets.QLabel(self.centralwidget)
        self.dutyLabel_2.setGeometry(QtCore.QRect(x_2[0], y[i], label_w, label_h))
        self.dutyLabel_2.setObjectName("dutyLabel_2")
        self.dutyLabel_2.setText("占空比/%")
        self.dutyInput_2 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.dutyInput_2.setGeometry(QtCore.QRect(x_2[1], y[i], input_w, input_h))
        self.dutyInput_2.setMaximum(100.0)
        self.dutyInput_2.setSingleStep(10.0)
        self.dutyInput_2.setObjectName("dutyInput_2")
        self.dutyInput_2.setValue(50)
        i += 1

        self.phiLabel_2 = QtWidgets.QLabel(self.centralwidget)
        self.phiLabel_2.setGeometry(QtCore.QRect(x_2[0], y[i], label_w, label_h))
        self.phiLabel_2.setObjectName("phiLabel_2")
        self.phiLabel_2.setText("相位/°")
        self.phiInput_2 = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.phiInput_2.setGeometry(QtCore.QRect(x_2[1], y[i], input_w, input_h))
        self.phiInput_2.setMaximum(360.0)
        self.phiInput_2.setSingleStep(10)
        self.phiInput_2.setObjectName("phiInput_2")
        self.phiInput_2.setValue(0)
        i += 1

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.var = [
            {
                "freqInput": self.freqInput,
                "ampInput": self.ampInput,
                "offsetInput": self.offsetInput,
                "dutyInput": self.dutyInput,
            },
            {
                "freqInput": self.freqInput_2,
                "ampInput": self.ampInput_2,
                "offsetInput": self.offsetInput_2,
                "dutyInput": self.dutyInput_2,
            },
        ]
        # self.RunButton.clicked.connect(lambda x: self.on_clicked(0))

    def on_clicked(self, id):
        if self.var[id]["switch"].text() == "Turn on":
            self.var[id]["switch"].setText("Turn off")
            self.var[id]["switch"].setFont(QtGui.QFont("宋体", 14))
            self.var[id]["switch"].setStyleSheet("background-color: red;")
        else:
            self.var[id]["switch"].setText("Turn on")
            self.var[id]["switch"].setFont(QtGui.QFont("宋体", 14))
            self.var[id]["switch"].setStyleSheet("background-color: green;")

        freq = self.var[id]["freqInput"].value()
        amp = self.var[id]["ampInput"].value()
        offset = self.var[id]["offsetInput"].value()
        duty = self.var[id]["dutyInput"].value()
        print([freq, amp, offset, duty])


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
