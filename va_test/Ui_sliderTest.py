# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'e:\Project\Python\PocketInstrument\va_test\sliderTest.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import pyqtSlot
from PyQt5.QtWidgets import QMainWindow


class doubleSlider(QtWidgets.QSlider):
    def __init__(self, parent=None):
        super(doubleSlider, self).__init__(parent)
        super(doubleSlider, self).setMinimum(0)
        super(doubleSlider, self).setMaximum(100)

        self.__mi, self.__ma, self.__step = 0, 1, 0.01

    def setParameters(self, mi, ma, num):
        self.__mi, self.__ma = mi, ma
        super(doubleSlider, self).setMaximum(num)
        self.__step = (ma - mi) / num

    def value(self):
        return self.__mi + super(doubleSlider, self).value() * self.__step

    def setValue(self, val):
        if self.__mi <= val <= self.__ma:
            super(doubleSlider, self).setValue(int((val - self.__mi) / self.__step))

    def maximum(self):
        return self.__ma

    def setMaximum(self, ma):
        if ma >= self.__mi:
            self.__ma = ma
            self.__step = (self.__ma - self.__mi) / (
                super(doubleSlider, self).maximum()
            )

    def minimum(self):
        return self.__mi

    def setMinimum(self, mi):
        if mi <= self.__ma:
            self.__mi = mi
            self.__step = (self.__ma - self.__mi) / (
                super(doubleSlider, self).maximum()
            )

    def setRange(self, mi, ma):
        if ma >= mi:
            self.__ma, self.__mi = ma, mi
            self.__step = (self.__ma - self.__mi) / (
                super(doubleSlider, self).maximum()
            )


class logSpinBox(QtWidgets.QDoubleSpinBox):
    def __init__(self, parent=None):
        super(logSpinBox, self).__init__(parent)

    def stepUp(self):
        v = self.singleStep() * self.value()
        if v <= self.maximum():
            self.setValue(v)
        else:
            self.setValue(self.maximum())

    def stepDown(self):
        v = self.value() / self.singleStep()
        if v >= self.minimum():
            self.setValue(v)
        else:
            self.setValue(self.minimum())


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 200, 100, 100))
        self.label.setObjectName("label")
        self.label.setText("000")

        self.horizontalSlider = doubleSlider(self.centralwidget)
        self.horizontalSlider.setGeometry(QtCore.QRect(0, 150, 800, 16))
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")

        self.ZoomInput = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.ZoomInput.setGeometry(QtCore.QRect(0, 0, 800, 100))
        self.ZoomInput.setSingleStep(2)
        self.ZoomInput.setObjectName("ZoomInput")
        self.ZoomInput.setValue(1)
        self.ZoomInput.setMinimum(0.01)
        self.ZoomInput.setMaximum(20)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # self.ZoomInput.valueChanged.connect(self.on_ZoomInput_valueChanged)
        # self.horizontalSlider.valueChanged.connect(
        #     self.on_horizontalSlider_valueChanged
        # )

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

    # def on_ZoomInput_valueChanged(self):
    #     self.horizontalSlider.setMaximum(self.ZoomInput.value())

    # def on_horizontalSlider_valueChanged(self):
    #     self.label.setText(str(self.horizontalSlider.value()))


class MyApp(QMainWindow, Ui_MainWindow):
    def __init__(self, parent=None):
        super(MyApp, self).__init__()
        self.setupUi(self)

    # @pyqtSlot(float)
    # def on_ZoomInput_valueChanged(self,val):


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    ui = MyApp()
    ui.show()
    sys.exit(app.exec_())
